<?php

namespace Test\SpojeNet\System;

use AbraFlexi\Bricks\WebHookHandler;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2018-04-20 at 19:24:51.
 */
class WebHookHandlerTest extends \Test\AbraFlexi\FlexiBeeRWTest
{
    /**
     * @var WebHookHandler
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() : void
    {
        $this->object = new WebHookHandler(1,
            ['changeid' => HookRecieverTest::getFakeChangeId(), 'operation' => 'delete']);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() : void
    {
        
    }

    /**
     * @covers SpojeNet\System\WebHookHandler::setUp
     */
    public function testSetUp()
    {
        $this->object->setUp(['operation' => 'testSetUp', 'changeid' => HookRecieverTest::getFakeChangeId(),
            'external-ids' => ['test' => HookRecieverTest::getFakeChangeId()]]);
    }

    /**
     * @covers SpojeNet\System\WebHookHandler::saveHistory
     */
    public function testSaveHistory()
    {
        $this->object->evidence  = 'test';
        $this->object->operation = 'unitTest';
        $this->object->setMyKey(1);
        $this->assertFalse(empty($this->object->saveHistory()));
    }

    /**
     * @covers SpojeNet\System\WebHookHandler::setOperation
     */
    public function testSetOperation()
    {
        $this->object->setOperation('testSetOperation');
        $this->assertEquals('testSetOperation', $this->object->operation);
    }

    /**
     * @covers SpojeNet\System\WebHookHandler::process
     */
    public function testProcess()
    {
        $this->object->process('create');
        $this->object->process('update');
        $this->object->process('delete');
        $this->object->process('unknown');
    }

    /**
     * @covers SpojeNet\System\WebHookHandler::create
     */
    public function testCreate()
    {
        $this->object->create();
    }

    /**
     * @covers SpojeNet\System\WebHookHandler::update
     */
    public function testUpdate()
    {
        $this->object->update();
    }

    /**
     * @covers SpojeNet\System\WebHookHandler::delete
     */
    public function testDelete()
    {
        $this->object->delete();
    }

    /**
     * @covers SpojeNet\System\WebHookHandler::getCurrentData
     */
    public function testGetCurrentData()
    {
        $this->object->setEvidence('faktura-vydana');
        $this->object->setMyKey($this->object->getFirstRecordID());
        $this->object->getCurrentData();
    }

    /**
     * @covers SpojeNet\System\WebHookHandler::getPreviousData
     */
    public function testGetPreviousData()
    {
        $this->object->getPreviousData();
    }

    /**
     * @covers SpojeNet\System\WebHookHandler::getChanges
     */
    public function testGetChanges()
    {
        $this->object->getChanges();
    }

    /**
     * @covers SpojeNet\System\WebHookHandler::getChangedData
     */
    public function testGetChangedData()
    {
        $this->object->getChangedData();
    }
}
